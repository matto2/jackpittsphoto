---
const currentPath = Astro.url.pathname;
---

<nav
  class="md:flex md:justify-between md:items-center mx-4 xl:mx-8 mt-8 min-h-24 md:mt-0"
>
  <div class="text-center md:flex md:items-center">
    <a href="/" data-link="home">
      <h2 class="text-3xl hover:text-red-700">Jack Pitts Photography</h2>
    </a>
  </div>
  <div class="flex justify-center items-center">
    <h2
      class="flex items-center space-x-6 font-libre-baskerville text-stone-500 md:text-xl text-base mt-3 xl:mt-0"
    >
      <a
        href="/about"
        data-link="about"
        class={`hover:text-red-700 cursor-pointer ${currentPath === "/about" ? "font-bold text-red-700" : ""}`}
        >About</a
      >

      <a
        href="/services"
        data-link="services"
        class={`hover:text-red-700 cursor-pointer ${currentPath === "/services" ? "font-bold text-red-700" : ""}`}
        >Services</a
      >

      <a
        href="/contact"
        data-link="contact"
        class={`hover:text-red-700 cursor-pointer ${currentPath === "/contact" ? "font-bold text-red-700" : ""}`}
        >Contact</a
      >

      <!-- Button to open off-canvas panel -->
      <button
        id="menu-button"
        class="lg:hidden inline-flex justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-gray-500 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
      >
        Photo Galleries
      </button>
    </h2>
  </div>
</nav>

<!-- Off-canvas panel -->
<div
  id="off-canvas"
  class="fixed inset-0 bg-gray-800 bg-opacity-50 hidden z-50"
>
  <div
    class="absolute right-0 top-0 w-64 bg-white h-full shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out"
    id="off-canvas-panel"
  >
    <div class="p-4">
      <button id="close-panel" class="mb-4 text-red-600 font-semibold">X</button
      >
      <a href="/galleries/people" class="block px-4 py-4 text-lg text-gray-700"
        >People</a
      >
      <a
        href="/galleries/botanicals"
        class="block px-4 py-4 text-lg text-gray-700">Botanicals</a
      >
      <a
        href="/galleries/landscapes"
        class="block px-4 py-4 text-lg text-gray-700">Landscapes</a
      >
      <a
        href="/galleries/portraits"
        class="block px-4 py-4 text-lg text-gray-700">Portraits</a
      >
      <a href="/galleries/surreal" class="block px-4 py-4 text-lg text-gray-700"
        >Surreal</a
      >
      <a href="/galleries/street" class="block px-4 py-4 text-lg text-gray-700"
        >Street</a
      >
      <a
        href="/galleries/2004-democratic-convention"
        class="block px-4 py-4 text-lg text-gray-700"
        >2004 Democratic Convention</a
      >
      <a
        href="/galleries/holy-joe"
        class="block px-4 py-4 text-lg text-gray-700">Holy Joe</a
      >
    </div>
  </div>
</div>

<script client:load>
  const initializeOffCanvas = () => {
    const menuButton = document.getElementById("menu-button");
    const offCanvas = document.getElementById("off-canvas");
    const offCanvasPanel = document.getElementById("off-canvas-panel");
    const closePanel = document.getElementById("close-panel");

    if (!menuButton || !offCanvas || !offCanvasPanel || !closePanel) {
      return; // Elements not found; exit the function
    }

    // Function to open the off-canvas panel
    const openPanel = (event) => {
      event.preventDefault();
      offCanvas.classList.remove("hidden");
      setTimeout(() => {
        offCanvasPanel.classList.remove("translate-x-full");
      }, 10); // Slight delay for smooth transition
      event.stopPropagation(); // Prevents propagation to outside click handler
    };

    // Function to close the off-canvas panel
    const closePanelFunc = (event) => {
      event.preventDefault();
      offCanvasPanel.classList.add("translate-x-full");
      setTimeout(() => {
        offCanvas.classList.add("hidden");
      }, 300); // Matches the transition duration
    };

    // Handle click to open the panel
    menuButton.addEventListener("click", openPanel);

    // Handle click to close the panel
    closePanel.addEventListener("click", closePanelFunc);

    // Close panel when clicking outside of it
    offCanvas.addEventListener("click", (event) => {
      if (!offCanvasPanel.contains(event.target)) {
        closePanelFunc(event);
      }
    });
  };

  initializeOffCanvas();
</script>
